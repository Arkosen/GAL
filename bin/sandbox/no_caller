#!/usr/bin/perl
use strict;
use warnings;
use Getopt::Long;
use Bio::DB::Sam;
use Set::IntSpan::Fast;

#-----------------------------------------------------------------------------
#----------------------------------- MAIN ------------------------------------
#-----------------------------------------------------------------------------
my $usage = "

Synopsis:

no_caller alignments.bam

Description:

This script will call the regions of no-call in an alignment file.

";

my ($help);
my $opt_success = GetOptions('help'    => \$help,
			      );

die $usage if $help || ! $opt_success;

my ($bam_file, $fasta_file) = @ARGV;
die $usage unless $bam_file && $fasta_file;

my $sam = Bio::DB::Sam->new(-bam   => $bam_file,
			    -fasta => $fasta_file,
			    );


my @chrs = qw(chr1 chr2 chr3 chr4 chr5 chr6 chr7 chr8
	      chr9 chr10 chr11 chr12 chr13 chr14 chr15
	      chr16 chr17 chr18 chr19 chr20 chr21 chr22
	      chrX chrY chrM);

my %no_calls = map {$_ => Set::IntSpan::Fast->new()} @chrs;

$sam->pileup('chr22', \&no_calls);

print '';

#-----------------------------------------------------------------------------
#-------------------------------- SUBROUTINES --------------------------------
#-----------------------------------------------------------------------------

sub no_calls {
    my ($seqid,$pos,$p) = @_;
    my $refbase = $sam->segment($seqid,$pos,$pos)->dna;
    my $total;
    my %alleles;
    for my $pileup (@$p) {
	my $b = $pileup->alignment;
	next if $pileup->indel or $pileup->is_refskip; # don't deal with these ;-)

	my $qbase  = substr($b->qseq,$pileup->qpos,1);
	next if $qbase =~ /[nN]/;
	$alleles{$qbase}++;
	my $qscore = $b->qscore->[$pileup->qpos];
	next if $qscore < 25;

	$total++;
    }
    my $allele_count = scalar keys %alleles;
    if ($total < 4 || $allele_count > 1 && $total < 8) {
	print join "\t", ($seqid, $pos, $total);
	print "\n";
	$no_calls{$seqid}->add($pos);
    }
};

